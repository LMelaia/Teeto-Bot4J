/*
 *  This file is part of TeetoBot4J.
 *
 *  TeetoBot4J is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  TeetoBot4J is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with TeetoBot4J.  If not, see <https://www.gnu.org/licenses/>.
 */
group 'teetobot'
version '2.4'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

sourceCompatibility = 1.8

mainClassName="net.lmelaia.teeto.Main"

applicationDefaultJvmArgs = ["-Xms250m", "-Xmx650m"]

repositories {
    mavenCentral()
    jcenter()
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

dependencies {
    //JDA (Java Discord API)
    compile 'net.dv8tion:JDA:3.7.1_393'

    compile 'com.sedmelluq:lavaplayer:1.3.7'

    //JUnit
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //Google Gson
    //https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    //Log4J2
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'

    //Slf4j-Log4j2
    //https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.8.2'

    //Reflections library for annotation processing.
    //https://mvnrepository.com/artifact/org.reflections/reflections
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'

}

//#################################
// Distribution zip modifications.
//#################################
//Copies the config folder to the distribution zip.
//and then the token file to the unpacked distribution
//zip

//Unpacks the distribution zip in the build/distributions folder.
task unzipDist(type: Copy) {
    def zipFile = file("${buildDir}/distributions/" + "teetobot-" + version + ".zip")
    def outputDir = file("${buildDir}/distributions")

    from zipTree(zipFile)
    into outputDir
}

task deleteDist(type: Delete) {
    delete "${buildDir}/distributions/"
    followSymlinks = true
}

//Copies the config folder to the unpacked zip folder
task copyConfig(type: Copy) {
    from "${projectDir}/config"
    into "${buildDir}/distributions/teetobot-" + version + "/config"
}

//Copies the audio folder to the unpacked zip folder
task copyAudio(type: Copy) {
    from "${projectDir}/audio"
    into "${buildDir}/distributions/teetobot-" + version + "/audio"
}

//Recreates the distribution zip with the config folder.
task recreateDistZip(type: Zip) {
    from "${buildDir}/distributions/teetobot-" + version
    include '*'
    include '*/*' //to include contents of a folder present inside Reports directory
    include '*/*/*'
    archiveName "teetobot-" + version + ".zip"
    destinationDir(file("${buildDir}/distributions"))
}

//Copies the token file AFTER the distribution
//has been created. This avoids releasing the token file
//to git.
task copyTokenFile(type: Copy) {
    from "${projectDir}/.TOKEN"
    into "${buildDir}/distributions/teetobot-" + version
}

//DistZip modifications.
distZip.dependsOn deleteDist
distZip.finalizedBy unzipDist
unzipDist.finalizedBy copyConfig
unzipDist.finalizedBy copyAudio
copyConfig.finalizedBy recreateDistZip
recreateDistZip.finalizedBy copyTokenFile